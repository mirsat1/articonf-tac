input {
  file {
    path => "C:/Users/sefid/Desktop/testing_logstash/Test7/output.json"
    sincedb_path => "NULL"
    start_position => "beginning"
    codec => json
  }
}
filter {
#    date {
#      match => ["startDateOfOffer", "dd-MM-yyyy"]
#      target => "@timestamp"
#      timezone => "Europe/Berlin"
#    }
#    date {
#      match => ["endDateOfOffer", "dd-MM-yyyy", "ISO8601"]
#      timezone => "Europe/Berlin"
#    }
#    date {
#      match => ["startDateOfTravel", "dd-MM-yyyy", "ISO8601"]
#      timezone => "Europe/Berlin"
#    }
#    date {
#      match => ["startDateOfTravel", "dd-MM-yyyy", "ISO8601"]
#      timezone => "Europe/Berlin"
#    }
#    date {
#      match => ["endDateOfTravel", "dd-MM-yyyy", "ISO8601"]
#      timezone => "Europe/Berlin"
#    }
    mutate {convert => {"available" => "boolean"}}
    mutate {convert => {"balance" => "float"}}
    mutate {convert => {"canceled" => "boolean"}}
    mutate {convert => {"carLicensePlate" => "integer"}}
    mutate {convert => {"deposit" => "float"}}
    mutate {convert => {"depositeBalance" => "float"}}
    mutate {convert => {"kmTraveled" => "float"}}
    mutate {convert => {"priceBalance" => "float"}}
    mutate {convert => {"priceForKm" => "float"}}
    mutate {convert => {"priceForTime" => "float"}}
    mutate {convert => {"rentForTime" => "boolean"}}
    mutate {convert => {"reputation" => "integer"}}
    mutate {convert => {"rewardBalance" => "float"}}
    mutate {convert => {"seatsAvailable" => "integer"}}
    mutate {convert => {"totalPrice" => "float"}}
}
output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    user => "elastic"
    password => "mirsat"
    index => ["this-is-for-testing-logstash-delete-if-not-needed"]
  }
  stdout { codec=>"dots" }
  if "_dateparsefailure" in [tags] {
    stdout {codec => "rubydebug"}
  }
  if "_grokparsefailure" in [tags] {
    stdout {codec => "rubydebug"}
  }
}
