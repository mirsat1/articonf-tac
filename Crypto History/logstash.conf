input {
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/bitcoin_cash_price.csv"]
        sincedb_path => "NULL"
        type => "bitcoin_cash_price"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/bitcoin_dataset.csv"]
        sincedb_path => "NULL"
        type => "bitcoin_dataset"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/bitcoin_price.csv"]
        sincedb_path => "NULL"
        type => "bitcoin_price"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/bitconnect_price.csv"]
        sincedb_path => "NULL"
        type => "bitconnect_price"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/dash_price.csv"]
        sincedb_path => "NULL"
        type => "dash_price"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/ethereum_classic_price.csv"]
        sincedb_path => "NULL"
        type => "ethereum_classic_price"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/ethereum_dataset.csv"]
        sincedb_path => "NULL"
        type => "ethereum_dataset"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/ethereum_price.csv"]
        sincedb_path => "NULL"
        type => "ethereum_price"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/iota_price.csv"]
        sincedb_path => "NULL"
        type => "iota_price"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/litecoin_price.csv"]
        sincedb_path => "NULL"
        type => "litecoin_price"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/monero_price.csv"]
        sincedb_path => "NULL"
        type => "monero_price"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/nem_price.csv"]
        sincedb_path => "NULL"
        type => "nem_price"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/neo_price.csv"]
        sincedb_path => "NULL"
        type => "neo_price"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/numeraire_price.csv"]
        sincedb_path => "NULL"
        type => "numeraire_price"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/omisego_price.csv"]
        sincedb_path => "NULL"
        type => "omisego_price"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/qtum_price.csv"]
        sincedb_path => "NULL"
        type => "qtum_price"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/ripple_price.csv"]
        sincedb_path => "NULL"
        type => "ripple_price"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/stratis_price.csv"]
        sincedb_path => "NULL"
        type => "stratis_price"
    }
    file {
        start_position => "beginning"
        path => ["C:/Users/Mirsat/Desktop/WORK/testing_logstash/Crypto History/waves_price.csv"]
        sincedb_path => "NULL"
        type => "waves_price"
    }
}
filter {
    if [type] == "bitcoin_cash_price" {
        csv {
            columns => ["Date","Open","High","Low","Close","Volume","Market Cap"]
            convert => {
                "Date" => "date"
                "Open" => "float"
                "High" => "float"
                "Low" => "float"
                "Close" => "float"
            }
        }
        date {
            match => ["Date", "MMM dd yyyy"]
            timezone => "UTC"
        }
        mutate {
            gsub => ["Volume", "[\"\,]", ""]
            gsub => ["Market Cap", "[\"\,]", ""]
            convert => {
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }        
    }
    else if [type] == "bitcoin_dataset" {
        csv {
            columns => ["Date","btc_market_price","btc_total_bitcoins","btc_market_cap","btc_trade_volume","btc_blocks_size","btc_avg_block_size","btc_n_orphaned_blocks","btc_n_transactions_per_block","btc_median_confirmation_time","btc_hash_rate","btc_difficulty","btc_miners_revenue","btc_transaction_fees","btc_cost_per_transaction_percent","btc_cost_per_transaction","btc_n_unique_addresses","btc_n_transactions","btc_n_transactions_total","btc_n_transactions_excluding_popular","btc_n_transactions_excluding_chains_longer_than_100","btc_output_volume","btc_estimated_transaction_volume","btc_estimated_transaction_volume_usd"]
            convert => {
                "Date" => "date"
                "btc_market_price" => "float"
                "btc_total_bitcoins" => "float"
                "btc_market_cap" => "float"
                "btc_trade_volume" => "float"
                "btc_blocks_size" => "float"
                "btc_n_orphaned_blocks" => "float"
                "btc_n_transactions_per_block" => "float"
                "btc_median_confirmation_time" => "float"
                "btc_hash_rate" => "float"
                "btc_difficulty" => "float"
                "btc_miners_revenue" => "float"
                "btc_transaction_fees" => "float"
                "btc_cost_per_transaction_percent" => "float"
                "btc_cost_per_transaction" => "float"
                "btc_n_unique_addresses" => "float"
                "btc_n_transactions" => "float"
                "btc_n_transactions_total" => "float"
                "btc_n_transactions_excluding_popular" => "float"
                "btc_n_transactions_excluding_chains_longer_than_100" => "float"
                "btc_output_volume" => "float"
                "btc_estimated_transaction_volume" => "float"
                "btc_estimated_transaction_volume_usd" => "float"
                "btc_avg_block_size" => "float"
                
            }
        }
        date {
            match => ["Date", "yyyy-MM-dd HH:mm:ss"]
            timezone => "UTC"
        }
    }
    else if [type] == "bitcoin_price" {
        csv {
            columns => ["Date","Open","High","Low","Close","Volume","Market Cap"]
            convert => {
                "Date" => "date"
                "Open" => "float"
                "High" => "float"
                "Low" => "float"
                "Close" => "float"
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }
        date {
            match => ["Date", "MMM dd yyyy"]
            timezone => "UTC"
        }
        mutate {
            gsub => ["Volume", "[\"\,]", ""]
            gsub => ["Market Cap", "[\"\,]", ""]
            convert => {
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }       
    }
    else if [type] == "bitconnect_price" {
        csv {
            columns => ["Date","Open","High","Low","Close","Volume","Market Cap"]
            convert => {
                "Date" => "date"
                "Open" => "float"
                "High" => "float"
                "Low" => "float"
                "Close" => "float"
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }
        date {
            match => ["Date", "MMM dd yyyy"]
            timezone => "UTC"
        }
        mutate {
            gsub => ["Volume", "[\"\,]", ""]
            gsub => ["Market Cap", "[\"\,]", ""]
            convert => {
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }       
    }
    else if [type] == "dash_price" {
        csv {
            columns => ["Date","Open","High","Low","Close","Volume","Market Cap"]
            convert => {
                "Date" => "date"
                "Open" => "float"
                "High" => "float"
                "Low" => "float"
                "Close" => "float"
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }
        date {
            match => ["Date", "MMM dd yyyy"]
            timezone => "UTC"
        }
        mutate {
            gsub => ["Volume", "[\"\,]", ""]
            gsub => ["Market Cap", "[\"\,]", ""]
            convert => {
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }       
    }
    else if [type] == "ethereum_classic_price" {
        csv {
            columns => ["Date","Open","High","Low","Close","Volume","Market Cap"]
            convert => {
                "Date" => "date"
                "Open" => "float"
                "High" => "float"
                "Low" => "float"
                "Close" => "float"
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }
        date {
            match => ["Date", "MMM dd yyyy"]
            timezone => "UTC"
        }
        mutate {
            gsub => ["Volume", "[\"\,]", ""]
            gsub => ["Market Cap", "[\"\,]", ""]
            convert => {
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }       
    }
    else if [type] == "ethereum_dataset" {
        csv {
            columns => ["Date(UTC)","UnixTimeStamp","eth_etherprice","eth_tx","eth_address","eth_supply","eth_marketcap","eth_hashrate","eth_difficulty","eth_blocks","eth_uncles","eth_blocksize","eth_blocktime","eth_gasprice","eth_gaslimit","eth_gasused","eth_ethersupply","eth_ens_register"]
            convert => {
                "eth_etherprice" => "float"
                "eth_tx" => "integer"
                "eth_address" => "integer"
                "eth_supply" => "float"
                "eth_marketcap" => "float"
                "eth_hashrate" => "float"
                "eth_difficulty" => "float"
                "eth_blocks" => "integer"
                "eth_uncles" => "integer"
                "eth_blocksize" => "integer"
                "eth_blocktime" => "float"
                "eth_gasprice" => "integer"
                "eth_gaslimit" => "integer"
                "eth_gasused" => "integer"
                "eth_ethersupply" => "float"
                "eth_ens_register" => "integer"
            }
        }
        date {
            match => ["Date(UTC)", "MM/dd/yyyy"]
            timezone => "UTC"
        }
        date {
            match => ["UnixTimeStamp", "UNIX"]
            timezone => "UTC"
        }
    }
    else if [type] == "ethereum_price" {
        csv {
            columns => ["Date","Open","High","Low","Close","Volume","Market Cap"]
            convert => {
                "Date" => "date"
                "Open" => "float"
                "High" => "float"
                "Low" => "float"
                "Close" => "float"
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }
        date {
            match => ["Date", "MMM dd yyyy"]
            timezone => "UTC"
        }
        mutate {
            gsub => ["Volume", "[\"\,]", ""]
            gsub => ["Market Cap", "[\"\,]", ""]
            convert => {
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }       
    }
    else if [type] == "iota_price" {
        csv {
            columns => ["Date","Open","High","Low","Close","Volume","Market Cap"]
            convert => {
                "Date" => "date"
                "Open" => "float"
                "High" => "float"
                "Low" => "float"
                "Close" => "float"
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }
        date {
            match => ["Date", "MMM dd yyyy"]
            timezone => "UTC"
        }
        mutate {
            gsub => ["Volume", "[\"\,]", ""]
            gsub => ["Market Cap", "[\"\,]", ""]
            convert => {
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }       
    }
    else if [type] == "litecoin_price" {
        csv {
            columns => ["Date","Open","High","Low","Close","Volume","Market Cap"]
            convert => {
                "Date" => "date"
                "Open" => "float"
                "High" => "float"
                "Low" => "float"
                "Close" => "float"
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }
        date {
            match => ["Date", "MMM dd yyyy"]
            timezone => "UTC"
        }
        mutate {
            gsub => ["Volume", "[\"\,]", ""]
            gsub => ["Market Cap", "[\"\,]", ""]
            convert => {
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }       
    }
    else if [type] == "monero_price" {
        csv {
            columns => ["Date","Open","High","Low","Close","Volume","Market Cap"]
            convert => {
                "Date" => "date"
                "Open" => "float"
                "High" => "float"
                "Low" => "float"
                "Close" => "float"
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }
        date {
            match => ["Date", "MMM dd yyyy"]
            timezone => "UTC"
        }
        mutate {
            gsub => ["Volume", "[\"\,]", ""]
            gsub => ["Market Cap", "[\"\,]", ""]
            convert => {
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }       
    }
    else if [type] == "nem_price" {
        csv {
            columns => ["Date","Open","High","Low","Close","Volume","Market Cap"]
            convert => {
                "Date" => "date"
                "Open" => "float"
                "High" => "float"
                "Low" => "float"
                "Close" => "float"
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }
        date {
            match => ["Date", "MMM dd yyyy"]
            timezone => "UTC"
        }
        mutate {
            gsub => ["Volume", "[\"\,]", ""]
            gsub => ["Market Cap", "[\"\,]", ""]
            convert => {
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }       
    }
    else if [type] == "neo_price" {
        csv {
            columns => ["Date","Open","High","Low","Close","Volume","Market Cap"]
            convert => {
                "Date" => "date"
                "Open" => "float"
                "High" => "float"
                "Low" => "float"
                "Close" => "float"
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }
        date {
            match => ["Date", "MMM dd yyyy"]
            timezone => "UTC"
        }
        mutate {
            gsub => ["Volume", "[\"\,]", ""]
            gsub => ["Market Cap", "[\"\,]", ""]
            convert => {
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }       
    }
    else if [type] == "numeraire_price" {
        csv {
            columns => ["Date","Open","High","Low","Close","Volume","Market Cap"]
            convert => {
                "Date" => "date"
                "Open" => "float"
                "High" => "float"
                "Low" => "float"
                "Close" => "float"
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }
        date {
            match => ["Date", "MMM dd yyyy"]
            timezone => "UTC"
        }
        mutate {
            gsub => ["Volume", "[\"\,]", ""]
            gsub => ["Market Cap", "[\"\,]", ""]
            convert => {
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }       
    }
    else if [type] == "omisego_price" {
        csv {
            columns => ["Date","Open","High","Low","Close","Volume","Market Cap"]
            convert => {
                "Date" => "date"
                "Open" => "float"
                "High" => "float"
                "Low" => "float"
                "Close" => "float"
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }
        date {
            match => ["Date", "MMM dd yyyy"]
            timezone => "UTC"
        }
        mutate {
            gsub => ["Volume", "[\"\,]", ""]
            gsub => ["Market Cap", "[\"\,]", ""]
            convert => {
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }       
    }
    else if [type] == "qtum_price" {
        csv {
            columns => ["Date","Open","High","Low","Close","Volume","Market Cap"]
            convert => {
                "Date" => "date"
                "Open" => "float"
                "High" => "float"
                "Low" => "float"
                "Close" => "float"
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }
        date {
            match => ["Date", "MMM dd yyyy"]
            timezone => "UTC"
        }
        mutate {
            gsub => ["Volume", "[\"\,]", ""]
            gsub => ["Market Cap", "[\"\,]", ""]
            convert => {
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }       
    }
    else if [type] == "ripple_price" {
        csv {
            columns => ["Date","Open","High","Low","Close","Volume","Market Cap"]
            convert => {
                "Date" => "date"
                "Open" => "float"
                "High" => "float"
                "Low" => "float"
                "Close" => "float"
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }
        date {
            match => ["Date", "MMM dd yyyy"]
            timezone => "UTC"
        }
        mutate {
            gsub => ["Volume", "[\"\,]", ""]
            gsub => ["Market Cap", "[\"\,]", ""]
            convert => {
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }       
    }
    else if [type] == "stratis_price" {
        csv {
            columns => ["Date","Open","High","Low","Close","Volume","Market Cap"]
            convert => {
                "Date" => "date"
                "Open" => "float"
                "High" => "float"
                "Low" => "float"
                "Close" => "float"
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }
        date {
            match => ["Date", "MMM dd yyyy"]
            timezone => "UTC"
        }
        mutate {
            gsub => ["Volume", "[\"\,]", ""]
            gsub => ["Market Cap", "[\"\,]", ""]
            convert => {
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }       
    }
    else if [type] == "waves_price" {
        csv {
            columns => ["Date","Open","High","Low","Close","Volume","Market Cap"]
            convert => {
                "Date" => "date"
                "Open" => "float"
                "High" => "float"
                "Low" => "float"
                "Close" => "float"
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }
        date {
            match => ["Date", "MMM dd yyyy"]
            timezone => "UTC"
        }
        mutate {
            gsub => ["Volume", "[\"\,]", ""]
            gsub => ["Market Cap", "[\"\,]", ""]
            convert => {
                "Volume" => "integer"
                "Market Cap" => "integer"
            }
        }       
    }
}
output {
    if [type] == "bitcoin_cash_price" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_bitcoin_cash_price"
        }
    }
    else if [type] == "bitcoin_dataset" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_bitcoin_dataset"
        }
    }
    else if [type] == "bitcoin_price" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_bitcoin_price"
        }
    }
    else if [type] == "bitconnect_price" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_bitconnect_price"
        }
    }
    else if [type] == "dash_price" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_dash_price"
        }
    }
    else if [type] == "ethereum_classic_price" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_ethereum_classic_price"
        }
    }
    else if [type] == "ethereum_dataset" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_ethereum_dataset"
        }
    }
    else if [type] == "ethereum_price" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_ethereum_price"
        }
    }
    else if [type] == "iota_price" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_iota_price"
        }
    }
    else if [type] == "litecoin_price" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_litecoin_price"
        }
    }
    else if [type] == "monero_price" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_monero_price"
        }
    }
    else if [type] == "nem_price" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_nem_price"
        }
    }
    else if [type] == "neo_price" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_neo_price"
        }
    }
    else if [type] == "numeraire_price" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_numeraire_price"
        }
    }
    else if [type] == "omisego_price" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_omisego_price"
        }
    }
    else if [type] == "qtum_price" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_qtum_price"
        }
    }
    else if [type] == "ripple_price" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_ripple_price"
        }
    }
    else if [type] == "stratis_price" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_stratis_price"
        }
    }
    else if [type] == "waves_price" {
        elasticsearch {
            hosts => ["http://localhost:9200"]
            index => "crypto_waves_price"
        }
    }
    stdout {
        codec => "dots"
    }
}