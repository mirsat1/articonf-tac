input {
  file {
    path => "C:/Users/sefid/Desktop/testing_logstash/Testing Arithmetic Operations/Offer.csv"
    start_position => ["beginning"]
    sincedb_path => "NULL"
  }
}
filter {
  csv {
    separator => ","
    columns => ["id","car","priceForKm","priceForTime","startDate","endDate","startPlace.latitude","startPlace.longitude","startPlace.adress","endPlaces","available"]
    convert => {
      "priceForKm" => "float"
      "priceForTime" => "float"
      "startDate" => "date"
      "endDate" => "date"
      "startPlace.latitude" => "float"
      "startPlace.longitude" => "float"
      "available" => "boolean"
    }
  }
  date {
    match => [ "startDate", "UNIX" ]
    timezone => "CET"
  }
  mutate {
      rename => { "startPlace.latitude" => "[start_place][lat]" }
      rename => { "startPlace.longitude" => "[start_place][lon]" }
    }
  mutate {
      gsub => [
        "endPlaces", "longitude", "lon",
        "endPlaces", "latitude", "lat"
      ]
    }
  json {
    source => "endPlaces"
    target => "end_places"
  }
  mutate {
    remove_field => [ "message" ]
    remove_field => ["endPlaces"]
  }
  ruby {
    code => "event['diff_prices'] = event['priceForKm'] - event['priceForTime']"
  }
}
output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => ["arithmetic-opp"]
    user => "elastic"
    password => "mirsat"
  }
  stdout {codec => "dots"}
  if "_dateparsefailure" in [tags] {
    stdout {codec => "rubydebug"}
  }
  if "_grokparsefailure" in [tags] {
    stdout {codec => "rubydebug"}
  }
}
